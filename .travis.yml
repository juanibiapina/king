# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=king

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Android
    # - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    # - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    # - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    # - env: TARGET=i686-linux-android DISABLE_TESTS=1
    # - env: TARGET=x86_64-linux-android DISABLE_TESTS=1

    # iOS
    # - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=i386-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
    #   os: osx

    # Linux
    # - env: TARGET=aarch64-unknown-linux-gnu
    # - env: TARGET=arm-unknown-linux-gnueabi
    # - env: TARGET=armv7-unknown-linux-gnueabihf
    # - env: TARGET=i686-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-musl
    # - env: TARGET=mips-unknown-linux-gnu
    # - env: TARGET=mips64-unknown-linux-gnuabi64
    # - env: TARGET=mips64el-unknown-linux-gnuabi64
    # - env: TARGET=mipsel-unknown-linux-gnu
    # - env: TARGET=powerpc-unknown-linux-gnu
    # - env: TARGET=powerpc64-unknown-linux-gnu
    # - env: TARGET=powerpc64le-unknown-linux-gnu
    # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    # - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # - env: TARGET=i686-apple-darwin
    # os: osx
    - if: branch =~ /^v\d+\.\d+\.\d+.*$/
      env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    # - env: TARGET=x86_64-pc-windows-gnu

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install:
  - set -e
  - rustup self update

  # Debian-based ncurses installation
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker build -t juanibiapina/x86_64-unknown-linux-gnu ci/images/x86_64-unknown-linux-gnu; fi 

  # macOS ncurses installation
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update          ; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install ncurses ; fi

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "hmF34W6lp4fgvsYrhEtKKOXYKrcIIla3+TqTwZTOVTrPzhF7TS9coP6PRjEEiCG6u0tGCXmSGcmEikl5tl3lIj+0mpDzYhgtUbqThflRk3IbmKkINCWopplV8BZ+A7Ydmay5QzOm8pxOBmqDnHkze76/zFLjBBnjcpG7eDffhKKCp6zSrw2ikim9ev8kEgX27x802E8IoLksFuMIq+NEiBuySc7S0EW42acOH6BBBsWV1YGhyciI7uL7EsReODKdF4X38qcn9uyP9Oc/2anNhVgP/l0ue9OhYevGOZtqf/XDjAOUwyfvbvsBy5+ZM8ZElkyBg7Kjn9cHP8RLmX7Ij8C/DnyrxCqD2+imjfwHjuqPQaPXFbfhXG8DGFCtfS2lWitFksUt+KQWNYQZTtoVw4NFHI/kt7Xdu7s6MgkC1oD3yiFM9n5toIUhK5Y1euaWnjuMN4GcOxsnteNd+J/coErAilXnfK+MmeVsSzZsKO8iuTGi6pC4WzMkbw1VuKr9VgP/C4tgrKLdnqzTiUl0/d1pkyfhAPeuX2YCI9axFofC7mC2jsNP5Ljae0exsjnciDqNn4Qaih5UCM/KpemeLN/R5MsHK04yf/6+/YgNxLf8KC75eHRTpBNnQUDltBpTPUqgCR/bsGEeBbcYrKfLzFipJLuSMBAzY5JZu0B1FOs="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
